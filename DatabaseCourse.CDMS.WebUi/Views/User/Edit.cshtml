@using DatabaseCourse.CDMS.WebUi.Classes
@using DatabaseCourse.CDMS.WebUi.Controllers
@using DatabaseCourse.CDMS.Business.BusinessModel
@using DatabaseCourse.CDMS.Business.BusinessLogic
@using DatabaseCourse.Common.Utility.EnumUtility
@using DatabaseCourse.Common.Enums
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var userRoleList = EnumUtility.List(typeof(UserRoleEnum));
    var userRoleEnumList = new List<UserRoleEnum>();
    var DataId = (int)ThisApp.Session["UserId"];
    var userBll = new UserBLL(ThisApp.CurrentUser);
    var Data = new UserInfo();
    Data = null;
    if (DataId != 0)
    {
        Data = userBll.GetUserInfoById(DataId);
    }
    foreach (var item in userRoleList)
    {
        userRoleEnumList.Add(EnumUtility.GetEnumByTitle<UserRoleEnum>(item.Name));
    }
}

<div class="row">
    <div class="col-lg-6 col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                @ThisApp.PageDesctiption
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-12">
                        <form role="form">
                            <div class="form-group">
                                <label>نام </label>
                                <input class="form-control" id="txtFirstName" type="text" value="@Html.Raw(Data?.FirstName??"")">
                                <p class="text-danger" id="FirstName_Error"></p>
                            </div>
                            <div class="form-group">
                                <label>نام خانوادگی</label>
                                <input class="form-control" id="txtLastName" type="text" value="@Html.Raw(Data?.LastName??"")">
                                <p class="text-danger" id="LastName_Error"></p>
                            </div>
                            <div class="form-group">
                                <label>نام کاربری</label>
                                <input class="form-control" id="txtUsername" type="text" value="@Html.Raw(Data?.Username??"")">
                                <p class="text-danger" id="Username_Error"></p>
                            </div>
                            @if (DataId == 0 && Data == null)
                            {
                                <div class="form-group">
                                    <label>رمز عبور</label>
                                    <input class="form-control" id="txtPassword" type="password">
                                    <p class="text-danger" id="Password_Error"></p>
                                </div>
                            }
                            <div class="form-group">
                                <label>نقش‌های کاربر</label>
                                @foreach (var item in userRoleEnumList)
                                {
                                    var userEditRole = new List<UserRoleEnum>();
                                    if (DataId != 0 && Data != null)
                                    { userEditRole.AddRange(Data.UserRoles); }
                                    if ((int)item % 10 == 0 && (int)item != 0)
                                    {
                                        <div class="checkbox">
                                            <label>
                                                <input  @Html.Raw((bool)userEditRole?.Any(y => y == item) ? "checked=\"checked\"" : "") type="checkbox" value="@EnumUtility.GetEnumValue(item)">@EnumUtility.GetEnumDescription(item)
                                            </label>
                                        </div>
                                    }
                                }
                            </div>
                            <p class="text-danger" id="Roles_Error"></p>
                            <a class="btn btn-block btn-primary text-center" id="btnPressOk">اعمال تغییرات</a>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6">
        <p id="Server_Error">
            <ul id="Server_Error_List"></ul>
        </p>
    </div>
</div>
<script>
    var FormObject = function () {
        var chkArray = $('.checkbox input[type="checkbox"]:checked');
        var chkValArray = {};
        for (var i = 0; i < chkArray.length; i++) {
            chkValArray[i] = chkArray[i].value;
        }
        this.UserName = $('#txtUsername').val();
        this.Password = $('#txtPassword').val();
        this.FirstName = $('#txtFirstName').val();
        this.LastName = $('#txtLastName').val();
        this.Roles = chkValArray;

        this.ClearErrors = function () {
            $('#Username_Error').html("");
            $('#Password_Error').html("");
            $('#Roles_Error').html("");
        };

        this.CheckFirstName = function () {
            if (this.FirstName === "") {
                $('#FirstName_Error').html("لطفا نام را وارد کنید");
                return false;
            }
            return true;
        };
        this.CheckLastName = function () {
            if (this.LastName === "") {
                $('#LastName_Error').html("لطفا نام خانوادگی را وارد کنید");
                return false;
            }
            return true;
        };
        this.CheckUserName = function () {
            if (this.UserName === "") {
                $('#Username_Error').html("لطفا نام کاربری را وارد کنید");
                return false;
            }
            return true;
        };
        this.CheckPassword = function () {
            if (this.Password === "") {
                $('#Password_Error').html("لطفا رمزعبور را وارد کنید");
                return false;
            }
            return true;
        };

        this.CheckRoles = function () {
            if (this.Roles.length === 0) {
                $('#Roles_Error').html("لطفا حداقل یک نقش انتخاب کنید");
                return false;
            }
            return true;
        };
        this.Validate = function () {
            this.ClearErrors();
            var res = this.CheckUserName() &&
                this.CheckPassword() &&
                this.CheckFirstName() &&
                this.CheckLastName() &&
                this.CheckRoles();
            return res;
        }
    };
</script>
<script>
    $('#btnPressOk').click(function() {
        ShowLoading();
        var formObj = new FormObject();
        if (formObj.Validate()) {
            $.ajax({
                url: "/User/UserEdit",
                type: "POST",
                data: {
                    fn: @Html.Raw((Data== null && DataId == 0)? EnumUtility.GetEnumValue(UserController.EditUserFunctionEnum.Add)
                       : @EnumUtility.GetEnumValue(UserController.EditUserFunctionEnum.Update)),
                    userUiModel: {
                        Username: formObj.UserName,
                        FirstName: formObj.FirstName,
                        LastName: formObj.LastName,
                        Password: formObj.Password,
                        UserRoles: formObj.Roles
                    }
                },
                success: function (data) {
                    if(data.Status === @Html.Raw(EnumUtility.GetEnumValue(JsonResultStatus.Ok)))
                    {
                        window.location.assign("../User/Index");
                }
            else if (data.Status === @Html.Raw(EnumUtility.GetEnumValue(JsonResultStatus.Exception)))
            {
                HideLoading();
                debugger
                $('ul#Server_Error_List').empty();
                var exlist = data.Description;
                for (var i = 0; i < exlist.length ; i++) {
                    $('ul#Server_Error_List').append("<li>" + exlist[i].Message + "</li>");
                }
            }
        },
        error: function (x, e, er) {
        }
    });
    }
    else {
        HideLoading();
    }
    });
</script>